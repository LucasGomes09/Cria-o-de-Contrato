package com.mycompany.lucas.form;

import com.mycompany.lucas.dao.ClienteDAO;
import com.mycompany.lucas.dao.ContratoDAO;
import com.mycompany.lucas.dao.EmpresaDAO;
import com.mycompany.lucas.model.Cliente;
import com.mycompany.lucas.model.Contrato;
import com.mycompany.lucas.model.Empresa;
import java.sql.SQLException;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

public class ContratoForm extends javax.swing.JPanel {

    private final ClienteDAO clienteDAO;
    private final EmpresaDAO empresaDAO;
    private final ContratoDAO contratoDAO;

    public ContratoForm() {
        initComponents();
        this.clienteDAO = new ClienteDAO();
        this.empresaDAO = new EmpresaDAO();
        this.contratoDAO = new ContratoDAO();
        carregarClientes();
        carregarEmpresas();
    }
    
    // MÉTODOS DE LÓGICA
    private void carregarClientes() {
        try {
            List<Cliente> clientes = clienteDAO.read();
            DefaultComboBoxModel<Cliente> model = new DefaultComboBoxModel<>();
            model.addElement(null); 
            for (Cliente cliente : clientes) {
                model.addElement(cliente);
            }
            cmbCliente.setModel(model);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar clientes: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void carregarEmpresas() {
        try {
            List<Empresa> empresas = empresaDAO.read();

            DefaultComboBoxModel<Empresa> model = new DefaultComboBoxModel<>();
            model.addElement(null); 
            for (Empresa empresa : empresas) {
                model.addElement(empresa);
            }
            cmbEmpresa.setModel(model);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar empresas: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void limparCampos() {
        edtNome.setText("");
        txtDescricao.setText("");
        edtValor.setText("");
        cmbCliente.setSelectedItem(null);
        cmbEmpresa.setSelectedItem(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        edtNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbCliente = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cmbEmpresa = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescricao = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        edtValor = new javax.swing.JTextField();
        bntSalvarContrato = new javax.swing.JButton();

        jLabel1.setText("Nome do Contrato:");

        jLabel2.setText("Código Do Cliente :");

        jLabel3.setText("Código da Empresa: ");

        jLabel4.setText("Cláusulas do Contrato: ");

        txtDescricao.setColumns(20);
        txtDescricao.setRows(5);
        jScrollPane1.setViewportView(txtDescricao);

        jScrollPane2.setViewportView(jScrollPane1);

        jLabel5.setText("Valor :");

        bntSalvarContrato.setText("Salvar");
        bntSalvarContrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSalvarContratoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(edtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbCliente, 0, 421, Short.MAX_VALUE)
                                    .addComponent(cmbEmpresa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(edtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(bntSalvarContrato)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(edtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(edtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(66, 66, 66))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                        .addComponent(bntSalvarContrato)
                        .addGap(26, 26, 26))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bntSalvarContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSalvarContratoActionPerformed
        String nome = edtNome.getText().trim();
        String descricao = txtDescricao.getText().trim();
        
        if(nome.isEmpty()){
            JOptionPane.showMessageDialog(this, "O nome do contrato é obrigatório.", "Erro de Validação", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Cliente clienteSelecionado = (Cliente) cmbCliente.getSelectedItem();
        Empresa empresaSelecionada = (Empresa) cmbEmpresa.getSelectedItem();
        
        if (clienteSelecionado == null || empresaSelecionada == null) {
            JOptionPane.showMessageDialog(this, "Cliente e Empresa são obrigatórios.", "Erro de Validação", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        double valor;
        try {
            valor = Double.parseDouble(edtValor.getText().trim().replace(",", "."));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "O valor do contrato é inválido.", "Erro de Validação", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Contrato contrato = new Contrato(0, nome, clienteSelecionado.getId(), empresaSelecionada.getId(), descricao, valor);
        
        try {
            contratoDAO.create(contrato);
            JOptionPane.showMessageDialog(this, "Contrato salvo com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            limparCampos();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao salvar contrato: " + ex.getMessage(), "Erro de Banco de Dados", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bntSalvarContratoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntSalvarContrato;
    private javax.swing.JComboBox<com.mycompany.lucas.model.Cliente> cmbCliente;
    private javax.swing.JComboBox<com.mycompany.lucas.model.Empresa> cmbEmpresa;
    private javax.swing.JTextField edtNome;
    private javax.swing.JTextField edtValor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtDescricao;
    // End of variables declaration//GEN-END:variables
}
